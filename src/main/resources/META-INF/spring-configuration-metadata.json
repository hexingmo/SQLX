{
  "groups": [
    {
      "name": "sqlx",
      "type": "io.github.sqlx.integration.springboot.properties.SqlXProperties",
      "sourceType": "io.github.sqlx.integration.springboot.properties.SqlXProperties"
    },
    {
      "name": "sqlx.clusters",
      "type": "io.github.sqlx.integration.springboot.properties.ClusterProperties",
      "sourceType": "io.github.sqlx.integration.springboot.properties.ClusterProperties"
    },
    {
      "name": "sqlx.clusters",
      "type": "java.util.List",
      "sourceType": "io.github.sqlx.integration.springboot.properties.SqlXProperties",
      "sourceMethod": "getClusters()"
    },
    {
      "name": "sqlx.config.metrics",
      "type": "io.github.sqlx.config.MetricsConfiguration",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.data-sources",
      "type": "io.github.sqlx.integration.springboot.properties.DataSourceProperties",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties"
    },
    {
      "name": "sqlx.data-sources",
      "type": "java.util.List",
      "sourceType": "io.github.sqlx.integration.springboot.properties.SqlXProperties",
      "sourceMethod": "getDataSources()"
    },
    {
      "name": "sqlx.metrics",
      "type": "io.github.sqlx.integration.springboot.properties.MetricsProperties",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics",
      "type": "io.github.sqlx.integration.springboot.properties.MetricsProperties",
      "sourceType": "io.github.sqlx.integration.springboot.properties.SqlXProperties",
      "sourceMethod": "getMetrics()"
    },
    {
      "name": "sqlx.pointcuts",
      "type": "io.github.sqlx.integration.springboot.properties.PointcutProperties",
      "sourceType": "io.github.sqlx.integration.springboot.properties.PointcutProperties"
    },
    {
      "name": "sqlx.pointcuts",
      "type": "java.util.List",
      "sourceType": "io.github.sqlx.integration.springboot.properties.SqlXProperties",
      "sourceMethod": "getPointcuts()"
    },
    {
      "name": "sqlx.sql-parsing",
      "type": "io.github.sqlx.integration.springboot.properties.SqlParsingProperties",
      "sourceType": "io.github.sqlx.integration.springboot.properties.SqlParsingProperties"
    },
    {
      "name": "sqlx.sql-parsing",
      "type": "io.github.sqlx.integration.springboot.properties.SqlParsingProperties",
      "sourceType": "io.github.sqlx.integration.springboot.properties.SqlXProperties",
      "sourceMethod": "getSqlParsing()"
    }
  ],
  "properties": [
    {
      "name": "sqlx.clusters.defaulted",
      "type": "java.lang.Boolean",
      "description": "Whether the cluster is defaulted.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.ClusterProperties",
      "defaultValue": false
    },
    {
      "name": "sqlx.clusters.name",
      "type": "java.lang.String",
      "description": "The name of the cluster, used to identify the cluster.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.ClusterProperties"
    },
    {
      "name": "sqlx.clusters.read-load-balance-class",
      "type": "java.lang.String",
      "description": "The read load balance class.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.ClusterProperties"
    },
    {
      "name": "sqlx.clusters.readable-nodes",
      "type": "java.util.Set<java.lang.String>",
      "description": "The read nodes in the cluster.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.ClusterProperties"
    },
    {
      "name": "sqlx.clusters.writable-nodes",
      "type": "java.util.Set<java.lang.String>",
      "description": "The write nodes in the cluster.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.ClusterProperties"
    },
    {
      "name": "sqlx.clusters.write-load-balance-class",
      "type": "java.lang.String",
      "description": "The write load balance class.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.ClusterProperties"
    },
    {
      "name": "sqlx.config.metrics.collect-core-pool-size",
      "type": "java.lang.Integer",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.collect-keep-alive-millis",
      "type": "java.lang.Long",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.collect-max-pool-size",
      "type": "java.lang.Integer",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.collect-mode",
      "type": "io.github.sqlx.metrics.MetricsCollectMode",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.collect-queue-capacity",
      "type": "java.lang.Integer",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.collect-scope",
      "type": "io.github.sqlx.config.MetricsCollectScope",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.data-retention-duration",
      "type": "java.time.Duration",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration",
      "defaultValue": "3d"
    },
    {
      "name": "sqlx.config.metrics.enable-routing-metrics",
      "type": "java.lang.Boolean",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration",
      "defaultValue": true
    },
    {
      "name": "sqlx.config.metrics.enable-sql-metrics",
      "type": "java.lang.Boolean",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration",
      "defaultValue": true
    },
    {
      "name": "sqlx.config.metrics.enable-transaction-metrics",
      "type": "java.lang.Boolean",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration",
      "defaultValue": true
    },
    {
      "name": "sqlx.config.metrics.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.file-directory",
      "type": "java.lang.String",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.password",
      "type": "java.lang.String",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.slow-sql-millis",
      "type": "java.lang.Long",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.slow-transaction-millis",
      "type": "java.lang.Long",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.config.metrics.username",
      "type": "java.lang.String",
      "sourceType": "io.github.sqlx.config.MetricsConfiguration"
    },
    {
      "name": "sqlx.data-sources.data-source-class",
      "type": "java.lang.String",
      "description": "The fully qualified class name of the data source",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties"
    },
    {
      "name": "sqlx.data-sources.defaulted",
      "type": "java.lang.Boolean",
      "description": "Whether this is the default data source.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties",
      "defaultValue": false
    },
    {
      "name": "sqlx.data-sources.destroy-method",
      "type": "java.lang.String",
      "description": "A method name that can be invoked to clean up resources when the data source is no longer needed.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties"
    },
    {
      "name": "sqlx.data-sources.heartbeat-interval",
      "type": "java.lang.Long",
      "description": "Heartbeat interval cycle in milliseconds",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties",
      "defaultValue": 10000
    },
    {
      "name": "sqlx.data-sources.heartbeat-sql",
      "type": "java.lang.String",
      "description": "Heartbeat detection sql",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties",
      "defaultValue": "SELECT 1"
    },
    {
      "name": "sqlx.data-sources.init-method",
      "type": "java.lang.String",
      "description": "The name of the method that can be invoked to initialize the data source when it is first created or configured.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties"
    },
    {
      "name": "sqlx.data-sources.init-sql-script",
      "type": "java.lang.String",
      "description": "Path to the SQL script that will be executed to initialize the database schema.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties"
    },
    {
      "name": "sqlx.data-sources.name",
      "type": "java.lang.String",
      "description": "Name of the data source.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties"
    },
    {
      "name": "sqlx.data-sources.props",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Native data source property configuration",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties"
    },
    {
      "name": "sqlx.data-sources.weight",
      "type": "java.lang.Double",
      "description": "load balancing weight",
      "sourceType": "io.github.sqlx.integration.springboot.properties.DataSourceProperties"
    },
    {
      "name": "sqlx.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether sqlx is enabled.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.SqlXProperties",
      "defaultValue": true
    },
    {
      "name": "sqlx.metrics.collect-core-pool-size",
      "type": "java.lang.Integer",
      "description": "Core thread pool size for metrics collection tasks.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.collect-keep-alive-millis",
      "type": "java.lang.Long",
      "description": "Keep-alive time in milliseconds for idle threads in the metrics thread pool.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.collect-max-pool-size",
      "type": "java.lang.Integer",
      "description": "Maximum thread pool size for metrics collection tasks.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.collect-mode",
      "type": "io.github.sqlx.metrics.MetricsCollectMode",
      "description": "Mode of metrics collection (e.g., synchronous or asynchronous).",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.collect-queue-capacity",
      "type": "java.lang.Integer",
      "description": "Capacity of the task queue used by the metrics thread pool.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.collect-scope",
      "type": "io.github.sqlx.config.MetricsCollectScope",
      "description": "Scope of metrics collection (e.g., only slow queries, all queries).",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.data-retention-duration",
      "type": "java.time.Duration",
      "description": "Duration for which collected metrics should be retained.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties",
      "defaultValue": "3d"
    },
    {
      "name": "sqlx.metrics.enable-routing-metrics",
      "type": "java.lang.Boolean",
      "description": "Whether to enable routing metrics collection.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties",
      "defaultValue": true
    },
    {
      "name": "sqlx.metrics.enable-sql-metrics",
      "type": "java.lang.Boolean",
      "description": "Whether to enable SQL execution metrics collection.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties",
      "defaultValue": true
    },
    {
      "name": "sqlx.metrics.enable-transaction-metrics",
      "type": "java.lang.Boolean",
      "description": "Whether to enable transaction metrics collection.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties",
      "defaultValue": true
    },
    {
      "name": "sqlx.metrics.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether metrics collection is enabled.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.file-directory",
      "type": "java.lang.String",
      "description": "Directory path where metrics files will be stored (if applicable).",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.password",
      "type": "java.lang.String",
      "description": "Password for metrics reporting or authentication.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.slow-sql-millis",
      "type": "java.lang.Long",
      "description": "Threshold in milliseconds for a SQL statement to be considered slow.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.slow-transaction-millis",
      "type": "java.lang.Long",
      "description": "Threshold in milliseconds for a transaction to be considered slow.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.metrics.username",
      "type": "java.lang.String",
      "description": "Username for metrics reporting or authentication.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.MetricsProperties"
    },
    {
      "name": "sqlx.pointcuts.cluster",
      "type": "java.lang.String",
      "description": "Cluster: Specifies the cluster to which the pointcut belongs, used for routing decisions.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.PointcutProperties"
    },
    {
      "name": "sqlx.pointcuts.expression",
      "type": "java.lang.String",
      "description": "Expression: Specifies the pointcut expression, used to define the matching rules for join points.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.PointcutProperties"
    },
    {
      "name": "sqlx.pointcuts.nodes",
      "type": "java.util.List<java.lang.String>",
      "description": "Nodes: Specifies a list of nodes, used for detailed routing within the cluster.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.PointcutProperties"
    },
    {
      "name": "sqlx.pointcuts.propagation",
      "type": "java.lang.Boolean",
      "description": "Propagation: Indicates whether the routing behavior should be propagated, default is true. When true, the routing behavior will affect subsequent calls in the call chain.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.PointcutProperties",
      "defaultValue": true
    },
    {
      "name": "sqlx.sql-parsing.sql-parser-class",
      "type": "java.lang.String",
      "description": "SQL parser class name.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.SqlParsingProperties"
    },
    {
      "name": "sqlx.sql-parsing.sql-parsing-fail-behavior",
      "type": "io.github.sqlx.config.SqlParsingFailBehavior",
      "description": "Behavior when SQL parsing fails.",
      "sourceType": "io.github.sqlx.integration.springboot.properties.SqlParsingProperties"
    }
  ],
  "hints": []
}